import { Button } from '@mui/material';
import Head from 'next/head';
import Image from 'next/image';
import Link from 'next/link';
import styles from '../styles/Home.module.css';
import data from '../data';
import { Box } from '@mui/system';
import { TwitterTweetEmbed } from 'react-twitter-embed';
import { rankTweets } from '../libs/utiliities';

export default function Home({ tweets, trends }) {
  // const rawTweets = data.globalObjects.tweets

  // const tweets =  Object.keys(rawTweets).map(k => {
  // const {id, reply_count, retweet_count, quote_count, favorite_count} = rawTweets[k]
  //   return {id: k, replies: reply_count, fav: favorite_count, retweet: retweet_count, quote: quote_count}
  // })
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <h1>Web Scraping in Nextjs</h1>
      <Link href='/api/trends'>
        <Button variant='contained'>Go to api</Button>
      </Link>

      {/* <bold>{risposta.length}</bold> */}
      {/* <Box sx={{margin: '20px'}}>

    {risposta.map(item => <div>{item.item.content.trend.name}</div>)}
</Box>
  <pre>

    {JSON.stringify(risposta, undefined, 4)}
  </pre> */}
      <pre></pre>
      <pre>
        {JSON.stringify(trends, undefined, 4)}
        {/* {JSON.stringify(tweets.length, undefined, 4)} */}
        {JSON.stringify(rankTweets(tweets), undefined, 4)}
        {tweets.map((t) => (
          <div key={t.id}>
            <TwitterTweetEmbed tweetId={t.id} options={{ cards: 'hidden' }} />
            <p>{t.fav + ' -  ' + ' R ' + t.retweet + ' - Q ' + t.quote}</p>
          </div>
        ))}
      </pre>
    </div>
  );
}

export async function getStaticProps() {
  const trendsResponse = await fetch('http://localhost:3000/api/trends');
  const trendsJson = await trendsResponse.json();

  // const resSearch = await fetch('http://localhost:3000/api/finesearch');
  // const searchJson = await resSearch.json();

  // const tweets = searchJson;
  // const trends = trendsJson;
  const tweetsResponse = await fetch('http://localhost:3000/api/all')
  const tweetsJson = await tweetsResponse.json()
  const tweets =tweetsJson.results[0].tweets
  const trends = tweetsJson.results.map(r => `${r.name} - ${r.trendScore}`)
  return {
    props: { tweets, trends },
  };
}
